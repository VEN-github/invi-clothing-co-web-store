!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("three"),require("gsap/TweenMax")):"function"==typeof define&&define.amd?define(["three","gsap/TweenMax"],t):e.hoverEffect=t(e.THREE,e.TweenMax)}(this,function(T,R){return R=R&&R.hasOwnProperty("default")?R.default:R,function(e){function t(){for(var e=arguments,t=0;t<arguments.length;t++)if(void 0!==e[t])return e[t]}console.log("%c Hover effect by Robin Delaporte: https://github.com/robin-dela/hover-effect ","color: #bada55; font-size: 0.8rem");var n,i,r,o,a,s,d,l,u,f=e.parent,p=e.displacementImage,m=e.image1,c=e.image2,v=t(e.intensity1,e.intensity,1),g=t(e.intensity2,e.intensity,1),h=t(e.angle,Math.PI/4),x=t(e.angle1,h),y=t(e.angle2,3*-h),F=t(e.speedIn,e.speed,1.6),w=t(e.speedOut,e.speed,1.2),h=t(e.hover,!0),L=t(e.easing,Expo.easeOut),E=t(e.video,!1);function M(){R.to(u.uniforms.dispFactor,F,{value:1,ease:L,onUpdate:o,onComplete:o})}function P(){R.to(u.uniforms.dispFactor,w,{value:0,ease:L,onUpdate:o,onComplete:o})}f?m&&c&&p?(n=new T.Scene,(i=new T.OrthographicCamera(f.offsetWidth/-2,f.offsetWidth/2,f.offsetHeight/2,f.offsetHeight/-2,1,1e3)).position.z=1,(r=new T.WebGLRenderer({antialias:!1,alpha:!0})).setPixelRatio(window.devicePixelRatio),r.setClearColor(16777215,0),r.setSize(f.offsetWidth,f.offsetHeight),f.appendChild(r.domElement),o=function(){r.render(n,i)},(e=new T.TextureLoader).crossOrigin="",(p=e.load(p,o)).wrapS=p.wrapT=T.RepeatWrapping,E?((a=function(){requestAnimationFrame(a),r.render(n,i)})(),(E=document.createElement("video")).autoplay=!0,E.loop=!0,E.src=m,E.load(),(s=document.createElement("video")).autoplay=!0,s.loop=!0,s.src=c,s.load(),d=new T.VideoTexture(E),l=new T.VideoTexture(s),d.magFilter=l.magFilter=T.LinearFilter,d.minFilter=l.minFilter=T.LinearFilter,s.addEventListener("loadeddata",function(){s.play(),(l=new T.VideoTexture(s)).magFilter=T.LinearFilter,l.minFilter=T.LinearFilter,u.uniforms.texture2.value=l},!1),E.addEventListener("loadeddata",function(){E.play(),(d=new T.VideoTexture(E)).magFilter=T.LinearFilter,d.minFilter=T.LinearFilter,u.uniforms.texture1.value=d},!1)):(d=e.load(m,o),l=e.load(c,o),d.magFilter=l.magFilter=T.LinearFilter,d.minFilter=l.minFilter=T.LinearFilter),u=new T.ShaderMaterial({uniforms:{intensity1:{type:"f",value:v},intensity2:{type:"f",value:g},dispFactor:{type:"f",value:0},angle1:{type:"f",value:x},angle2:{type:"f",value:y},texture1:{type:"t",value:d},texture2:{type:"t",value:l},disp:{type:"t",value:p}},vertexShader:"\nvarying vec2 vUv;\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n",fragmentShader:"\nvarying vec2 vUv;\n\nuniform float dispFactor;\nuniform sampler2D disp;\n\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform float angle1;\nuniform float angle2;\nuniform float intensity1;\nuniform float intensity2;\n\nmat2 getRotM(float angle) {\n  float s = sin(angle);\n  float c = cos(angle);\n  return mat2(c, -s, s, c);\n}\n\nvoid main() {\n  vec4 disp = texture2D(disp, vUv);\n  vec2 dispVec = vec2(disp.r, disp.g);\n  vec2 distortedPosition1 = vUv + getRotM(angle1) * dispVec * intensity1 * dispFactor;\n  vec2 distortedPosition2 = vUv + getRotM(angle2) * dispVec * intensity2 * (1.0 - dispFactor);\n  vec4 _texture1 = texture2D(texture1, distortedPosition1);\n  vec4 _texture2 = texture2D(texture2, distortedPosition2);\n  gl_FragColor = mix(_texture1, _texture2, dispFactor);\n}\n",transparent:!0,opacity:1}),p=new T.PlaneBufferGeometry(f.offsetWidth,f.offsetHeight,1),p=new T.Mesh(p,u),n.add(p),h&&(f.addEventListener("mouseenter",M),f.addEventListener("touchstart",M),f.addEventListener("mouseleave",P),f.addEventListener("touchend",P)),window.addEventListener("resize",function(e){r.setSize(f.offsetWidth,f.offsetHeight)}),this.next=M,this.previous=P):console.warn("One or more images are missing"):console.warn("Parent missing")}});